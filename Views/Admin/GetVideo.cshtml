@model VoteClip.Models.Video
@{
    ViewBag.Title = Model.titleVideo;
    List<VoteClip.Models.Round> listRound = VoteClip.Models.RoundService.GetAllRound();
}
<div id="page-wrapper">
    <div class="row">
        <!-- page header -->
        <div class="col-lg-12">
            <h1 class="page-header">Forms</h1>
        </div>
        <!--end page header -->
    </div>
    <div class="row">
        <div class="col-lg-12">
            <!-- Form Elements -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    Basic Form Elements
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-6">
                            <form role="form" action="/Admin/GetVideo" method="post">
                                @Html.HiddenFor(m => m.idVideo)
                                <div class="form-group">
                                    <label>Tên video</label>
                                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["titleVideo"].Errors.Count > 0)
                                    {
                                        <div class="alert alert-danger" role="alert">
                                            <span class="sr-only">Error:</span>
                                            @ViewData.ModelState["titleVideo"].Errors[0].ErrorMessage
                                        </div>
                                    }
                                    @Html.TextBoxFor(m => m.titleVideo, new { @class = "form-control" })
                                    <p class="help-block">Nhập tên bài dự thi</p>
                                </div>
                                <div class="form-group">
                                    <label>Tác giả</label>
                                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["authorVideo"].Errors.Count > 0)
                                    {
                                        <div class="alert alert-danger" role="alert">
                                            <span class="sr-only">Error:</span>
                                            @ViewData.ModelState["authorVideo"].Errors[0].ErrorMessage
                                        </div>
                                    }
                                    @Html.TextBoxFor(m => m.authorVideo, new { @class = "form-control" })
                                    <p class="help-block">Tên người dự thi.</p>
                                    <p class="help-block">Exmaple: Nguyễn Văn A hay Nguyễn Văn A vs. Nguyễn Văn B * Phải có "vs."</p>
                                </div>
                                <div class="form-group">
                                    <label>Mã số sinh viên</label>
                                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["codeAuthor"].Errors.Count > 0)
                                    {
                                        <div class="alert alert-danger" role="alert">
                                            <span class="sr-only">Error:</span>
                                            @ViewData.ModelState["codeAuthor"].Errors[0].ErrorMessage
                                        </div>
                                    }
                                    @Html.TextBoxFor(m => m.codeAuthor, new { @class = "form-control" })
                                    <p class="help-block">Mã số sinh viên người dự thi.</p>
                                    <p class="help-block">Example: 123456 hoặc 123456 vs. 654321 * Phải có "vs.".</p>
                                </div>
                                <div class="form-group">
                                    <label>Mô tả về video</label>
                                    @Html.TextAreaFor(m => m.describeVideo, new { @class = "form-control", rows = "3" })
                                </div>
                                <div class="form-group">
                                    <label>Url youtube</label>
                                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["urlVideo"].Errors.Count > 0)
                                    {
                                        <div class="alert alert-danger" role="alert">
                                            <span class="sr-only">Error:</span>
                                            @ViewData.ModelState["urlVideo"].Errors[0].ErrorMessage
                                        </div>
                                    }
                                    @Html.TextBoxFor(m => m.urlVideo, new { @class = "form-control" })
                                    <p class="help-block">Đường dẫn youtube.</p>
                                </div>
                                <div class="form-group">
                                    <label>Vòng thi</label>
                                    <select class="form-control" id="idRound" name="idRound">
                                        @foreach(var round in listRound)
                                        {
                                            <option id="round-@round.idRound" value="@round.idRound" @if (round.idRound == Model.idRound) {<text>selected="selected"</text>}>@round.nameRound</option>
                                        }
                                    </select>
                                </div>
                                <button type="reset" class="btn btn-success" onclick="location.href = '/Admin/GetVideo?idVideo=@Model.idVideo'">Reset Button</button>
                                <button type="submit" class="btn btn-primary">Submit Button</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
